name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  linux-build:
    name: linux-build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
        
    - name: Checkout raylib repo
      uses: actions/checkout@v4
      with:
        repository: raysan5/raylib
        path: raylib
    
    - name: Setup Environment
      run: | 
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libwayland-dev libxkbcommon-dev cmake make gcc
        mkdir release
        ls
      shell: bash
        
    - name: Build raylib Library
      run: |
        cd raylib/src
        gcc --version
        make PLATFORM=PLATFORM_DESKTOP

    - name: Build Product
      run: |
        gcc main.c -o puffersbubbleblast_linux.out -O1 -Wall -std=c99 -Wno-missing-braces -I ./raylib/src -L ./raylib/src -lraylib -lGL -lm -lpthread -ldl -lrt -lX11

    - name: Generate Artifacts
      run: |
        ls
        cp puffersbubbleblast_linux.out release
        cp -r assets release
        cp README.md release
        cp LICENSE release
        ls release

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: puffersbubbleblast_linux
        path: release

  windows-build:
    name: windows-build
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
        
    - name: Checkout raylib repo
      uses: actions/checkout@v4
      with:
        repository: raysan5/raylib
        path: raylib
    
    - name: Setup Environment
      run: |
        choco install mingw -y
        setx PATH "%PATH%;C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin"
        mkdir bin
      shell: cmd
        
    - name: Build raylib Library
      run: |
        cd raylib/src
        mingw32-make PLATFORM=PLATFORM_DESKTOP

    - name: Build Product
      run: |
        gcc main.c -o puffersbubbleblast_windows.exe -O1 -Wall -std=c99 -Wno-missing-braces -I ./raylib/src -L ./raylib/src -lraylib -lopengl32 -lgdi32 -lwinmm

    - name: Generate Artifacts
      run: |
        dir
        mkdir release
        copy puffersbubbleblast_windows.exe release
        xcopy assets release\assets /E /I
        copy README.md release
        copy LICENSE release
        dir release
      shell: cmd

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: puffersbubbleblast_windows
        path: release

  HTML5:
    name: html5-build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
        
    - name: Checkout raylib repo
      uses: actions/checkout@v4
      with:
        repository: raysan5/raylib
        path: raylib

    - name: Checkout emsdk repo
      uses: actions/checkout@v4
      with:
        repository: emscripten-core/emsdk
        path: emsdk
    
    - name: Setup Environment
      run: | 
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev libwayland-dev libxkbcommon-dev cmake make gcc python3
        mkdir release
        ls
      shell: bash
        
    - name: Install emsdk
      run: |
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
        source ./emsdk_env.sh

    - name: Build raylib library
      run: |
        source ./emsdk/emsdk_env.sh
        cd raylib/src
        emcc -c rcore.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2
        emcc -c rshapes.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2
        emcc -c rtextures.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2
        emcc -c rtext.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2
        emcc -c rmodels.c -Os -Wall -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2
        emcc -c utils.c -Os -Wall -DPLATFORM_WEB
        emcc -c raudio.c -Os -Wall -DPLATFORM_WEB
        emar rcs libraylib.a rcore.o rshapes.o rtextures.o rtext.o rmodels.o utils.o raudio.o

    - name: Build Product
      run: |
        source ./emsdk/emsdk_env.sh
        emcc -o game.html main.c -Os -Wall ./raylib/src/libraylib.a  -I. -I./raylib/src -L. -L./raylib/src/libraylib.a -s USE_GLFW=3 -s TOTAL_MEMORY=67108864 -s -s ALLOW_MEMORY_GROWTH=1 -s FORCE_FILESYSTEM=1 --shell-file ./raylib/src/minshell.html -DPLATFORM_WEB --preload-file assets

    - name: Generate Artifacts
      run: |
        ls
        cp game.* release
        cp LICENSE release
        ls release

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: puffersbubbleblast_web
        path: release

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: release